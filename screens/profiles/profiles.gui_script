local button = require "utils.button"
local monarch = require "monarch.monarch"
local profiles = require "pokedex.profiles"
local storage = require "pokedex.storage"

local url = require "utils.url"

local function delete(profile)
	profiles.delete(profile)
end
local ACTIVE = vmath.vector3(1)
local INACTIVE = vmath.vector3(0.99, 0.95, 0.86, 1)


local function refresh(active_slot)
	local _profiles = profiles.get_all_profiles()
	for i=1, 3 do
		gui.set_color(gui.get_node("bg_" .. i), INACTIVE)
	end

	local size = vmath.vector3(850, 200, 0)
	gui.set_size(gui.get_node("btn_slot_" .. active_slot), size)
	gui.set_size(gui.get_node("bg_" .. active_slot), size)
	gui.set_color(gui.get_node("bg_" .. active_slot), ACTIVE)

end


local function activate(profile, slot)
	if profile then
		profiles.set_active(slot)
		storage.load(profiles.get_active())
		if #storage.list_of_ids_in_inventory() > 1 then
			monarch.show("party", {clear=true})
		else
			monarch.show("add", {clear=true})
		end
	else
		monarch.show("pick_name", nil, {sender=msg.url(), slot=slot})
	end
	refresh(slot)
end

function init(self)
	button.acquire()

	local _profiles = profiles.get_all_profiles()
	for i=1, 3 do
		if _profiles[i] then
			gui.set_text(gui.get_node("trainer_name_" .. i), _profiles[i].name)
			gui.set_text(gui.get_node("trainer_stats_" .. i), " Own: " .. _profiles[i].caught - _profiles[i].released)
		end
		gui.set_color(gui.get_node("bg_" .. i), INACTIVE)
		button.register("btn_slot_" .. i, function()
			activate(_profiles[i], i)
		end)
	end
	local slot = profiles.get_active_slot()
	if slot ~= nil then
		local size = vmath.vector3(850, 200, 0)
		gui.set_size(gui.get_node("btn_slot_" .. slot), size)
		gui.set_size(gui.get_node("bg_" .. slot), size)
		gui.set_color(gui.get_node("bg_" .. slot), ACTIVE)
	end
end

function final(self)
	button.unregister()
end

function on_input(self, action_id, action)
	button.on_input(action_id, action)
	if profiles.get_active_slot() == nil then
		return true
	end
end
