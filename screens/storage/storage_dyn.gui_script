local button = require "utils.button"
local monarch = require "monarch.monarch"
local storage = require "pokedex.storage"
local gooey = require "gooey.gooey"
local utils = require "utils.utils"
local gesture = require "utils.gesture"

local STORAGE_ROWS = 4
local STORAGE_COLUMNS = 2
local INVENTORY_COLUMNS = 2

local NUMBER_OF_PAGES = 2

local WHITE = vmath.vector4(1, 1, 1, 1)
local BLACK = vmath.vector4()

local position = vmath.vector3()

local selected_inventory = {}

function init(self)
	button.acquire()
	self.inventory_pokemon_template = gui.get_node("inventory_pokemon/root")
	self.list_items = storage.list_of_ids_in_storage()
	button.register("btn_move", function()
	end)

	button.register("btn_back", function()
		monarch.show("splash")
	end)
end

local function toggle(item)
	for index, i in pairs(selected_inventory) do
		if i == item.index then
			table.remove(selected_inventory, index)
			return
		end
	end
	table.insert(selected_inventory, item.index)
end

local function update_listitem(list, item)
	if item.index == list.selected_item then
		toggle(item)
		for _, index in pairs(selected_inventory) do
			if index == item.index then
				gui.set_color(item.nodes[hash(list.id .. "/checkmark_mark")], WHITE)
			end
		end
	end
end

local function update_list(list)
	for i,item in ipairs(list.items) do
		update_listitem(list, item)
		local pokemon = storage.get(item.data)
		if pokemon then
			for i=1, 4 do
				if pokemon.moves[i] then
					gui.set_text(item.nodes[hash(list.id .. "/move_" .. i)], pokemon.moves[i])
				else
					gui.set_text(item.nodes[hash(list.id .. "/move_" .. i)], "")
				end
			end
			gui.set_text(item.nodes[hash(list.id .. "/txt_level")], pokemon.level)
			gui.set_text(item.nodes[hash(list.id .. "/txt_spicies")], pokemon.spicies)
		end
	end
end

local function on_item_selected(list)
	for i,item in ipairs(list.items) do
		update_listitem(list, item)
	end
end




function on_input(self, action_id, action)
	button.on_input(action_id, action)
	if next(self.list_items) ~= nil then
		gooey.dynamic_list("storage_pokemon", "storage", "storage_pokemon/root", self.list_items, action_id, action, on_item_selected, update_list)
	end
end