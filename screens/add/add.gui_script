local pokemon_edit = require "templates.change_pokemon.change_pokemon"
local button = require "utils.button"
local natures = require "pokedex.natures"
local monarch = require "monarch.monarch"
local storage = require "pokedex.storage"
local pokedex = require "pokedex.pokedex"
local url = require "utils.url"
local _pokemon = require "pokedex.pokemon"
local transitions = require "utils.transitions"

HAVE_EVOLVED = false

function init(self)
	self.transition = transitions.default(gui.get_node("root"))
	gui.set_color(gui.get_node("spicies"), vmath.vector4(1,0,0,1))
	function self.redraw(self)
		local nature_node = gui.get_node("nature")
		gui.set_text(nature_node, self.pokemon.nature)
	end

	function self.register_buttons_after_species(self)
		button.register("btn_nature", function()
			gui.set_enabled(self.root, false)
			monarch.show("scrollist", {}, {items=natures.list, message_id="nature", sender=msg.url()})
			gui.set_color(gui.get_node("nature"), vmath.vector4(0,0,0,1))
			
		end)

		button.register("btn_add", function()
			if self.pokemon.nature ~= "" and self.pokemon.species.current ~= "" then
				self.pokemon.level.caught = self.level
				local max_hp = _pokemon.get_max_hp_at_level(self.pokemon, self.level)
				self.pokemon.hp.max = max_hp
				self.pokemon.attributes.increased = self.increased_attributes
				storage.add(self.pokemon)
				monarch.show("party", {clear=true})
			end
		end)
		
	end
	msg.post(url.SWITCHER, "activate", {screen="add"})
	button.acquire()

	pokemon_edit.init(self)

	button.register("btn_spicies", function()
		gui.set_color(gui.get_node("spicies"), vmath.vector4(0,0,0,1))
		gui.set_color(gui.get_node("nature"), vmath.vector4(1,0,0,1))
		gui.set_enabled(self.root, false)
		monarch.show("scrollist", {}, {items=pokedex.list, message_id="species", sender=msg.url()})
	end)

	pokemon_edit.redraw(self)
end

function final(self)
	pokemon_edit.final(self)
	button.unregister()
end

function on_message(self, message_id, message, sender)
	transitions.on_message(self.transition, message_id, message, sender)
	pokemon_edit.on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
	button.on_input(action_id, action)
end
