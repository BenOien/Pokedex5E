local pokemon_edit = require "screens.change_pokemon"
local button = require "utils.button"
local natures = require "pokedex.natures"
local monarch = require "monarch.monarch"
local storage = require "pokedex.storage"
local pokedex = require "pokedex.pokedex"
local _pokemon = require "pokedex.pokemon"

HAVE_EVOLVED = false
local function redraw()
	if not HAVE_EVOLVED and pokedex.can_evolve(self.pokemon.species) and pokedex.evolve_level(self.pokemon.species) <= self.pokemon.level and self.pokemon.old_level < self.pokemon.level then
		gui.set_enabled(self.evolve_button, true)
	else
		gui.set_enabled(self.evolve_button, false)
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	local pokedata = {species="", level=1, nature="", moves={"", "", "", ""},
	nature_attributes={STR=0, DEX=0, CON=0, INT=0, WIS=0, CHA=0}, 
	attributes={current={STR=0, DEX=0, CON=0, INT=0, WIS=0, CHA=0}, STR=0, DEX=0, CON=0, INT=0, WIS=0, CHA=0}, 
	STR=0, DEX=0, CON=0, INT=0, WIS=0, CHA=0}
	pokemon_edit.init(self, pokedata)
	
	button.register("btn_add", function()
		if self.pokemon.nature ~= "" and self.pokemon.species ~= "" then
			storage.add(self.pokemon)
			self.pokemon = pokedata
			pokemon_edit.redraw(self)
		end
	end)

	button.register("btn_spicies", function()
		gui.set_enabled(self.root, false)
		monarch.show("scrollist", {}, {items=pokedex.list, message_id="species", sender=msg.url()})
	end)

	button.register("btn_nature", function()
		gui.set_enabled(self.root, false)
		monarch.show("scrollist", {}, {items=natures.list, message_id="nature", sender=msg.url()})
	end)
	
	pokemon_edit.redraw(self)
end

function final(self)
	pokemon_edit.final(self)
end

function on_message(self, message_id, message, sender)
	pokemon_edit.on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
	button.on_input(action_id, action)
	pokemon_edit.on_input(self, action_id, action)
end
